[project]
name = "{{cookiecutter.package_name}}"
version = "0.1.0"
description = ""
authors = [{name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}"}]
readme = "README.md"

requires-python = ">=3.12"
dependencies = [
    "pip-audit>=2.7.3",
    "isort>=5.13.2",
    "monkeytype>=23.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.1.1",
    "pytest-cov>=5.0.0",
    "coverage>=7.4.4",
    "pytest-mock>=3.14.0",
    "ruff>=0.3.5",
    "black>=24.3.0",
    "mypy>=1.9.0",
]

[project.scripts]
run-app = "my_python_project.__main__:main"

{% if cookiecutter.include_artifactory == 'yes' %}
[[tool.uv.index]]
name = "pypi-default-virtual"
url = "https://rt.artifactory.tio.systems/artifactory/api/pypi/pypi-default-virtual/simple"
default = true

{% endif %}
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

########################################
# Coverage
########################################

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.package_name}}"]
omit = ["__init__.py", "__main__.py"]

########################################
# Formatting
########################################

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

########################################
# Linting
########################################

[tool.ruff]
src = ['src']
extend-exclude = ['tests']
line-length = 120

[tool.ruff.lint]
extend-select = [
    "ANN",      # flake8-annotations for type annotations
]
extend-ignore = [
    "ANN101",   # Missing type annotation for self in method
    "ANN102",   # Missing type annotation for cls in classmethod
    "ANN204",   # Missing return type annotation for special method
]

[tool.ruff.lint.pydocstyle]
convention = 'google'

[tool.ruff.lint.isort]
force-single-line = true
